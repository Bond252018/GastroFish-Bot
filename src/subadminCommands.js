const { bot, adminState, subadminMenu, departmentList } = require('./utils');
const User = require('../models/userDB');
const Task = require('../models/taskDB');

const {
  awaitingTaskDescription,
  awaitingTaskPhoto,
  awaitingDeadlineDate,
  awaitingManualDateInput,
  awaitingDeadlineTime,
  awaitingManualTimeInput
} = require('./deadlineHandler');
const { notifySubadminOnTaskCompletion } = require('./notifications'); 


async function handleSubadminCommands(msg, text, username) {
  const chatId = msg.chat.id;
  const user = await User.findOne({ username });

  if (!user || user.role !== 'subadmin') return;

 // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å—É–±–∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç
 const subadminDepartments = user.subadminDepartments; // –ú–∞—Å—Å–∏–≤ —Å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å—É–±–∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç

  if (text === 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
    delete adminState[username];
    return bot.sendMessage(chatId, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å—É–±–∞–¥–º–∏–Ω–∞:', subadminMenu);
  }

  if (text === 'üë• –ú–æ–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏') {
    try {
      // –ü–æ–ª—É—á–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'user' –≤ –æ–¥–Ω–æ–º –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π —Å—É–±–∞–¥–º–∏–Ω–∞
      const users = await User.find({ department: { $in: subadminDepartments }, role: 'user' });

      if (!users.length) {
        return bot.sendMessage(chatId, `–í –≤–∞—à–∏—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è—Ö –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.`, subadminMenu);
      }

      const list = users.map(u => `@${u.username}`).join('\n');
      return bot.sendMessage(chatId, `üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤–∞—à–∏—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π:\n\n${list}`, subadminMenu);

    } catch (err) {
      return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', subadminMenu);
    }
  }

  if (text === 'üìù –ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É') {

    adminState[username] = {
      step: 'awaitingDepartmentSelection',
      subadminDepartments,
      role: 'subadmin'
    };

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π
    const departmentButtons = subadminDepartments.map(dep => {
      const department = departmentList.find(d => d.name === dep);
      return [`${department.emoji} ${department.name}`];
    });

    departmentButtons.push(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']);
    return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:', {
      reply_markup: {
        keyboard: departmentButtons,
        resize_keyboard: true
      }
    });
}

if (adminState[username]) {
    const state = adminState[username];

    switch (state.step) {
      case 'awaitingDepartmentSelection':
        const departmentEntry = departmentList.find(dep => `${dep.emoji} ${dep.name}` === text);

        if (!departmentEntry || !subadminDepartments.includes(departmentEntry.name)) {
          return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞.');
        }
        
        state.selectedDepartment = departmentEntry.name;        
    
        state.step = 'awaitingTargetAudience'; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –≤—ã–±–æ—Ä–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏

        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º, –∫–æ–º—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
        return bot.sendMessage(chatId, '–ö–æ–º—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É?', {
          reply_markup: {
            keyboard: [['üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞'], ['üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
            resize_keyboard: true
          }
        });

      case 'awaitingTargetAudience':
        if (text === 'üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞') {
          state.target = 'all';  // –ó–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞
          state.step = 'awaitingTaskTitle';
          return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');
        }

        if (text === 'üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é') {
          // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
          const users = await User.find({ department: state.selectedDepartment, role: 'user' });

          if (!users.length) {
            return bot.sendMessage(chatId, '–í –≤—ã–±—Ä–∞–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.', subadminMenu);
          }

          const buttons = users.map(u => [`@${u.username}`]);
          buttons.push(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']);

          state.target = 'user';  // –ó–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          state.step = 'awaitingTargetUsername';

          return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
            reply_markup: { keyboard: buttons, resize_keyboard: true }
          });
        }
        break;
    
  
      case 'awaitingTargetUsername':
        const targetUsername = text.startsWith('@') ? text.slice(1) : text;  // –ò–∑–≤–ª–µ–∫–∞–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const selectedUser = await User.findOne({ username: targetUsername });
  
        if (!selectedUser || selectedUser.department !== state.selectedDepartment) {
          return bot.sendMessage(chatId, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–≥–æ.', {
            reply_markup: { keyboard: [['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard: true }
          });
        }
  
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞
        state.targetUsername = selectedUser.username;
        state.step = 'awaitingTaskTitle';
        return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');
  
      case 'awaitingTaskTitle':
        state.title = text;  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        state.step = 'awaitingTaskDescription';
        return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');
  
      case 'awaitingTaskDescription':
        await awaitingTaskDescription(bot, chatId, adminState, username, text);
        break;

      case 'awaitingTaskPhoto':
        await awaitingTaskPhoto(bot, chatId, adminState, username, text);
        break;

      case 'awaitingDeadlineDate':
        await awaitingDeadlineDate(bot, chatId, adminState, username, text);
        break;

      case 'awaitingManualDateInput':
        await awaitingManualDateInput(bot, chatId, adminState, username, text);
        break;

      case 'awaitingDeadlineTime':
        await awaitingDeadlineTime(msg, bot, chatId, adminState, username, text);
        break;

      case 'awaitingManualTimeInput':
        await awaitingManualTimeInput(msg, bot, chatId, adminState, username, text);
        break;
    }
  }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
async function completeTask(taskId) {
  const task = await Task.findById(taskId);
  if (!task) return;

  task.status = 'completed';
  await task.save();

  await notifySubadminOnTaskCompletion(task); // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—É–±–∞–¥–º–∏–Ω–∞
}

module.exports = { handleSubadminCommands, completeTask };
