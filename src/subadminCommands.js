const { bot, getKeyboard, adminState, subadminMenu, departmentList } = require('./utils');
const User = require('../models/userDB');
const Task = require('../models/taskDB');

const {
  awaitingTaskDescription,
  awaitingTaskPhoto,
  awaitingDeadlineDate,
  awaitingManualDateInput,
  awaitingDeadlineTime,
  awaitingManualTimeInput
} = require('./deadlineHandler');

const {
  handleUserCommands
} = require('./userCommands');  

const { handleAddUserFlow } = require('./addUserFlow');

const { notifySubadminOnTaskCompletion } = require('./notifications'); 

async function handleSubadminCommands(msg, text, username) {
  const chatId = msg.chat.id;
  const user = await User.findOne({ username });

  if (!user || user.role !== 'subadmin') return;

 // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å—É–±–∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç
 const subadminDepartments = user.subadminDepartments; // –ú–∞—Å—Å–∏–≤ —Å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å—É–±–∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç

  if (text === 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
    delete adminState[username];
    return bot.sendMessage(chatId, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å—É–±–∞–¥–º–∏–Ω–∞:', subadminMenu);
  }

  if (text === 'üë• –ú–æ–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏') {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'user' –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è—Ö —Å—É–±–∞–¥–º–∏–Ω–∞
    const users = await User.find({
      department: { $in: subadminDepartments },
      role: 'user'
    });

    if (!users.length) {
      return bot.sendMessage(chatId, `–í –≤–∞—à–∏—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è—Ö –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.`, subadminMenu);
    }

    const list = users
      .map(u => `@${u.username} ‚Äî ${u.department}`)
      .join('\n');

    return bot.sendMessage(
      chatId,
      `üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤–∞—à–∏—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π:\n\n${list}`,
      subadminMenu
    );

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:', err);
    return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', subadminMenu);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìù –ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"
if (text === 'üìù –ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É') {
  adminState[username] = {
    step: 'awaitingTarget',
    role: 'subadmin',
  };

  return bot.sendMessage(chatId, '–ö–æ–º—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É?', getKeyboard({
      buttonsRows: [['üìã –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é', 'üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É']],
      includeHome: true
    }));
  }

  // üìã –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
    if (adminState[username]?.step === 'awaitingTarget' && text === 'üìã –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é') {
    adminState[username].step = 'awaitingDepartment';

     return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª:', getKeyboard({
    buttonsRows: departmentList.map(d => [`${d.emoji} ${d.name}`]),
    includeBack: true,
    includeHome: true
  }));
}
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –≤—ã–±–æ—Ä–µ –æ—Ç–¥–µ–ª–∞
if (adminState[username]?.step === 'awaitingDepartment' && text === 'üîô –ù–∞–∑–∞–¥') {
  adminState[username].step = 'awaitingTarget';

  return bot.sendMessage(chatId, '–ö–æ–º—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É?', getKeyboard({
    buttonsRows: [['üìã –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é', 'üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É']],
    includeHome: true
  }));
}

// üßç –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
if (adminState[username]?.step === 'awaitingTarget') {
  if (text === 'üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É') {
    const currentId = msg.from.id.toString();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –±–∞–∑—ã
    const otherAdmins = await User.find({
      role: 'admin',
      telegramId: { $ne: currentId }
    });

    if (!otherAdmins.length) {
      return bot.sendMessage(chatId, '–ù–µ—Ç –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.');
    }

    adminState[username].step = 'awaitingAdmin';

  return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', getKeyboard({
      buttonsRows: otherAdmins.map(admin => [`@${admin.username}`]),
      includeBack: true,
      includeHome: true
    }));
  }
}
 // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –≤—ã–±–æ—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (adminState[username]?.step === 'awaitingAdmin' && text === 'üîô –ù–∞–∑–∞–¥') {
  adminState[username].step = 'awaitingTarget';

  return bot.sendMessage(chatId, '–ö–æ–º—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É?', getKeyboard({
    buttonsRows: [['üìã –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é', 'üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É']],
    includeHome: true
  }));
}
if (adminState[username]?.step === 'awaitingAdmin') {
    const targetUsername = text.replace('@', '').trim();

  const targetAdmin = await User.findOne({
    username: targetUsername,
    role: 'admin'
  });

  if (!targetAdmin) {
    return bot.sendMessage(chatId, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.');
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ –∂–µ –ø–æ–ª—è, —á—Ç–æ –∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  adminState[username].target = 'admin';
  adminState[username].targetUsername = targetAdmin.username;
  adminState[username].targetTelegramId = targetAdmin.telegramId;
  adminState[username].step = 'awaitingTaskTitle';

  return bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @${targetAdmin.username}:`);
}

if (text === 'üì• –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è') {
  adminState[username] = { step: 'awaitingUsername', role: 'subadmin' };
  return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ username –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ @username).');
}

if (adminState[username]) {
  const state = adminState[username];

  // –ü—Ä–æ–±—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const result = await handleAddUserFlow(bot, msg, adminState);

  // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∞ –ª–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ‚Äî –∏ –æ–Ω–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å
  if (result?.success && state.step === 'awaitingDepartmentForNewUserByUsername') {
    await bot.sendMessage(chatId, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å—É–±–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.', subadminMenu);
    return;
  }

    switch (state.step) {
     case 'awaitingDepartment':
            case 'awaitingDepartment':
          const selected = departmentList.find(d => `${d.emoji} ${d.name}` === text);
          if (!selected) return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');

          adminState[username] = { step: 'awaitingTargetAudience', department: selected.name };
          return bot.sendMessage(chatId, '–ö–æ–º—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É?', getKeyboard({
              buttonsRows: [
                ['üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞'],
                ['üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é']
              ],
              includeBack: true,
              includeHome: true
            }));

          case 'awaitingTargetAudience':
              if (text === 'üîô –ù–∞–∑–∞–¥') {
            adminState[username].step = 'awaitingDepartment';

              return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª:', getKeyboard({
              buttonsRows: departmentList.map(d => [`${d.emoji} ${d.name}`]),
              includeBack: true,
              includeHome: true
            }));
          }
          if (text === 'üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞') {
            adminState[username].target = 'all';
            adminState[username].step = 'awaitingTaskTitle';
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.', getKeyboard({
            buttonsRows: [], // –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
            includeBack: true,
            includeHome: true
          }));
        }

          if (text === 'üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é') {
            const department = adminState[username]?.department;

            if (!department) {
              return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç.');
            }

              // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å—É–±–∞–¥–º–∏–Ω–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ, –∏—Å–∫–ª—é—á–∞—è —Å–∞–º–æ–≥–æ —Å—É–±–∞–¥–º–∏–Ω–∞
    const users = await User.find({
      $and: [
        {
          $or: [
            { department: department },
            { subadminDepartments: department }
          ]
        },
        { username: { $ne: username } }  // –∏—Å–∫–ª—é—á–∞–µ–º —Å–∞–º–æ–≥–æ —Å–µ–±—è
      ],
      role: { $in: ['user', 'subadmin'] } // —É—á–∏—Ç—ã–≤–∞–µ–º —Ä–æ–ª–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    });

            if (!users.length) {
              return bot.sendMessage(chatId, '–í –≤—ã–±—Ä–∞–Ω–Ω–æ–º –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
            }

            adminState[username].target = 'user';
            adminState[username].step = 'awaitingTargetUsername';

            // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            const buttons = users.map(u => [`@${u.username}`]);
            buttons.push(['üîô –ù–∞–∑–∞–¥' , 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']);

            return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
              reply_markup: { keyboard: buttons, resize_keyboard: true }
            });
          }

          return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.');

          case 'awaitingTargetUsername':
            if (text === 'üîô –ù–∞–∑–∞–¥') {
              adminState[username].step = 'awaitingTargetAudience';
              return bot.sendMessage(chatId, '–ö–æ–º—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É?', getKeyboard({
                buttonsRows: [
                  ['üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞'],
                  ['üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é']
                ],
                includeBack: true,
                includeHome: true
              }));
            } 
            const targetUsername = text.trim().replace('@', '');
            const exists = await User.findOne({ username: targetUsername });
            if (!exists) return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
          
            adminState[username].targetUsername = targetUsername;
            adminState[username].step = 'awaitingTaskTitle';
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');
          
          case 'awaitingTaskTitle':
            if (text === 'üîô –ù–∞–∑–∞–¥') {
              adminState[username].step = 'awaitingTargetAudience';
              return bot.sendMessage(chatId, '–ö–æ–º—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É?', getKeyboard({
                buttonsRows: [
                  ['üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞'],
                  ['üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é']
                ],
                includeBack: true,
                includeHome: true
              }));
            }
            adminState[username].title = text;
            adminState[username].step = 'awaitingTaskDescription';
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');
        }
      }
      await handleUserCommands(msg, text, username);
    }

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
async function completeTask(taskId) {
  const task = await Task.findById(taskId);
  if (!task) return;

  task.status = 'completed';
  await task.save();

  await notifySubadminOnTaskCompletion(task); // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—É–±–∞–¥–º–∏–Ω–∞
}

module.exports = { handleSubadminCommands, completeTask };
