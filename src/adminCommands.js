const { isValidUsername, escapeHTML, departmentList, adminState, bot, Document, User, Task, adminMainMenu } = require('./utils');
const { adminIds } = require('../constants/constants');
 
const {
  awaitingTaskDescription,
  awaitingTaskPhoto,
  awaitingDeadlineDate,
  awaitingManualDateInput,
  awaitingDeadlineTime,
  awaitingManualTimeInput,
} = require('./deadlineHandler');


async function handleAdminCommands(msg, text, username, adminIds) {
  const chatId = msg.chat.id;

  if (adminIds.includes(msg.from.id)) {
    if (text === 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
      delete adminState[username];
      return bot.sendMessage(chatId, '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', adminMainMenu);
    }

    if (text === 'üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π') {
      try {
        const users = await User.find({});
        if (users.length === 0) return bot.sendMessage(chatId, '–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');

        const userList = users.map(user => `@${user.username} ‚Äî ${user.department}`).join('\n');
        return bot.sendMessage(chatId, `–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n${userList}`, adminMainMenu);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
        return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      }
    }

    if (text === 'üì• –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è') {
      adminState[username] = { step: 'awaitingUsername' };
      return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ username –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ @username).');
    }

    if (text === '‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è') {
      adminState[username] = { step: 'awaitingDeleteUsername' };
      return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ @username).');
    }
    if (text === 'üìù –ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (!adminState[username]) {
        adminState[username] = {
          step: 'awaitingDepartment', // –®–∞–≥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
          role: 'admin' // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å –∫–∞–∫ 'admin' –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
        };
        console.log(`–°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å adminState –¥–ª—è ${username} —Å —Ä–æ–ª—å—é admin`);
      } else {
        // –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–æ–ª—å, —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        adminState[username].step = 'awaitingDepartment';
        console.log(`–ó–∞–ø–∏—Å—å –¥–ª—è ${username} –æ–±–Ω–æ–≤–ª–µ–Ω–∞, —Ä–æ–ª—å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞–∫ ${adminState[username].role}`);
      }
      
      return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª:', {
        reply_markup: {
          keyboard: [
            ...departmentList.map(d => [`${d.emoji} ${d.name}`]),
            ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
          ],
          resize_keyboard: true
        }
      });
    }
    
    if (text === 'üëë –ù–∞–∑–Ω–∞—á–∏—Ç—å —Å—É–±–∞–¥–º–∏–Ω–∞') {
      adminState[username] = { step: 'awaitingSubadminUsername' };
      return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å—É–±–∞–¥–º–∏–Ω–æ–º (–≤ —Ñ–æ—Ä–º–∞—Ç–µ @username).');
    }

    if (text === 'üßπ –£–¥–∞–ª–∏—Ç—å —Å—É–±–∞–¥–º–∏–Ω–∞') {
      adminState[username] = { step: 'awaitingRemoveSubadminUsername' };
      return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ username —Å—É–±–∞–¥–º–∏–Ω–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å (–≤ —Ñ–æ—Ä–º–∞—Ç–µ @username).');
    }
   
    if (text === 'üìã –ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏') {
      // –®–∞–≥ 1: –ê–¥–º–∏–Ω –≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ç–¥–µ–ª
      adminState[username] = { step: 'awaitingDepartmentForTasks' };
      return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:', {
        reply_markup: {
          keyboard: [...departmentList.map(d => [`${d.emoji} ${d.name}`]), ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
          resize_keyboard: true
        }
      });
    }
    
  // –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –æ—Ç–¥–µ–ª—É
if (adminState[username] && adminState[username].step === 'awaitingDepartmentForTasks') {
  const selectedDepartment = departmentList.find(d => `${d.emoji} ${d.name}` === text);
  if (!selectedDepartment) return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');

  adminState[username].department = selectedDepartment.name;

  try {
    const now = new Date();
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'pending' –∏–ª–∏ 'overdue'
    const tasks = await Task.find({
      department: selectedDepartment.name,
      status: { $in: ['pending', 'overdue'] }
    }).sort({ deadline: 1 });

    let message = `üìã –ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ –æ—Ç–¥–µ–ª–µ "${escapeHTML(selectedDepartment.name)}":\n\n`;
    let hasPendingTasks = false;

    for (const task of tasks) {
      const deadline = new Date(task.deadline);
      const deadlinePassed = deadline < now;
      const isExpired = deadlinePassed && (now - deadline > 24 * 60 * 60 * 1000);

      if (isExpired) {
        console.log(`–ó–∞–¥–∞—á–∞ "${task.title}" –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –∏ –±—É–¥–µ—Ç –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ "expired".`);
        task.status = 'expired';
        await task.save();
        continue;
      }

      if (deadlinePassed) {
        hasPendingTasks = true;
        const deadlineStr = deadline.toLocaleString('ru-RU');

        message += `üî∏ <b>${escapeHTML(task.title)}</b>\n`;
        message += `üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: ${escapeHTML(task.description) || '‚Äî'}\n`;
        message += `üè¢ –û—Ç–¥–µ–ª: ${escapeHTML(task.department)}\n`;
        message += `üìÖ –î–µ–¥–ª–∞–π–Ω: ${escapeHTML(deadlineStr)}\n`;

        if (task.assignedTo) {
          message += `üë§ –ù–∞–∑–Ω–∞—á–µ–Ω–æ: @${escapeHTML(task.assignedTo)}\n`;
        } else {
          message += `üë§ –ù–∞–∑–Ω–∞—á–µ–Ω–æ: –≤—Å–µ–º –≤ –æ—Ç–¥–µ–ª–µ\n`;
        }

        message += '\n';
      }
    }

    if (!hasPendingTasks) {
      // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, —Å–æ–æ–±—â–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      await bot.sendMessage(chatId, '–í—Å–µ –∑–∞–¥–∞—á–∏ –≤ —ç—Ç–æ–º –æ—Ç–¥–µ–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã ‚úÖ', adminMainMenu);
    } else {
      const maxMessageLength = 4000; // —Å –∑–∞–ø–∞—Å–æ–º
      let currentPart = '';
      const parts = [];
      
      for (const task of tasks) {
        const deadline = new Date(task.deadline);
        const deadlinePassed = deadline < now;
        const isExpired = deadlinePassed && (now - deadline > 24 * 60 * 60 * 1000);
        if (isExpired) {
          task.status = 'expired';
          await task.save();
          continue;
        }
      
        if (deadlinePassed) {
          const deadlineStr = deadline.toLocaleString('ru-RU');
          let taskText = `üî∏ <b>${escapeHTML(task.title)}</b>\n`;
          taskText += `üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: ${escapeHTML(task.description) || '‚Äî'}\n`;
          taskText += `üè¢ –û—Ç–¥–µ–ª: ${escapeHTML(task.department)}\n`;
          taskText += `üìÖ –î–µ–¥–ª–∞–π–Ω: ${escapeHTML(deadlineStr)}\n`;
          taskText += task.assignedTo
            ? `üë§ –ù–∞–∑–Ω–∞—á–µ–Ω–æ: @${escapeHTML(task.assignedTo)}\n`
            : `üë§ –ù–∞–∑–Ω–∞—á–µ–Ω–æ: –≤—Å–µ–º –≤ –æ—Ç–¥–µ–ª–µ\n`;
          taskText += '\n';
      
          if (currentPart.length + taskText.length > maxMessageLength) {
            parts.push(currentPart);
            currentPart = taskText;
          } else {
            currentPart += taskText;
          }
        }
      }
      
      if (currentPart) parts.push(currentPart);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–¥–∏–Ω —Ä–∞–∑
      await bot.sendMessage(chatId, `üìã –ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ –æ—Ç–¥–µ–ª–µ "${selectedDepartment.name}":`, { parse_mode: 'HTML' });
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏
      for (const part of parts) {
        await bot.sendMessage(chatId, part, { parse_mode: 'HTML' });
      }      
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    return bot.sendMessage(chatId, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...', adminMainMenu);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:', error);
    return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}
  
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
if (text === 'üßπ –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏') {
  adminState[username] = { step: 'awaitingDepartmentForDelete' };

  return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:', {
    reply_markup: {
      keyboard: [...departmentList.map(d => [`${d.emoji} ${d.name}`]), ['‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
      resize_keyboard: true
    }
  });
}

if (adminState[username] && adminState[username].step === 'awaitingDepartmentForDelete') {
  const selectedDepartment = departmentList.find(d => `${d.emoji} ${d.name}` === text);

  if (!selectedDepartment) {
    return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');
  }

  adminState[username].department = selectedDepartment.name;

  try {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
    const expiredTasks = await Task.find({
      department: selectedDepartment.name,
      status: 'overdue'
    });

    if (expiredTasks.length === 0) {
      return bot.sendMessage(chatId, '–ù–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –≤ —ç—Ç–æ–º –æ—Ç–¥–µ–ª–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.', adminMainMenu);
    }

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
    await Task.deleteMany({
      department: selectedDepartment.name,
      status: 'overdue'
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –∑–∞–¥–∞—á–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    return bot.sendMessage(chatId, `–í—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏–∑ –æ—Ç–¥–µ–ª–∞ "${selectedDepartment.name}" –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.`, adminMainMenu);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:', error);
    return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

// –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –æ—Ç–¥–µ–ª—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
if (adminState[username] && adminState[username].step === 'awaitingDepartmentForDelete') {
  const selectedDepartment = departmentList.find(d => `${d.emoji} ${d.name}` === text);
  
  if (!selectedDepartment) {
    return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');
  }

  adminState[username].department = selectedDepartment.name;

  try {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
    const expiredTasks = await Task.find({
      department: selectedDepartment.name,
      status: 'overdue'
    });

    if (expiredTasks.length === 0) {
      return bot.sendMessage(chatId, '–ù–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –≤ —ç—Ç–æ–º –æ—Ç–¥–µ–ª–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.', adminMainMenu);
    }

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
    await Task.deleteMany({
      department: selectedDepartment.name,
      status: 'overdue'
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –∑–∞–¥–∞—á–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    return bot.sendMessage(chatId, `–í—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏–∑ –æ—Ç–¥–µ–ª–∞ "${selectedDepartment.name}" –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.`, adminMainMenu);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:', error);
    return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

    if (adminState[username]) {
      const state = adminState[username];

      switch (state.step) {
        case 'awaitingUsername':
          const usernameInput = text.trim().replace('@', '');
          if (!isValidUsername(text)) {
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username (–Ω–∞–ø—Ä–∏–º–µ—Ä, @ivan_petrov).');
          }

          try {
            const existingUser = await User.findOne({ username: usernameInput });
            if (existingUser) return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${usernameInput} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);

            const newUser = new User({ username: usernameInput, department: '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ' });
            await newUser.save();

            adminState[username] = { step: 'awaitingDepartmentForNewUserByUsername', username: usernameInput };
            bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${usernameInput} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.`);
            return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
              reply_markup: { keyboard: [...departmentList.map(d => [`${d.emoji} ${d.name}`]), ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard: true }
            });
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            return bot.sendMessage(chatId, `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`);
          }
          case 'awaitingSubadminUsername':
            if (!isValidUsername(text)) {
              return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username (–Ω–∞–ø—Ä–∏–º–µ—Ä, @ivan_petrov).');
            }

            const subUsername = text.trim().replace('@', '');
            const targetUser = await User.findOne({ username: subUsername });

            if (!targetUser) {
              return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${subUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
            }

            if (!targetUser.department || targetUser.department === '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ') {
              return bot.sendMessage(chatId, `–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${subUsername} –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –æ—Ç–¥–µ–ª. –ù–∞–∑–Ω–∞—á—å—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–¥–µ–ª.`);
            }

            targetUser.role = 'subadmin';
            await targetUser.save();

            delete adminState[username];

            return bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${subUsername} –Ω–∞–∑–Ω–∞—á–µ–Ω —Å—É–±–∞–¥–º–∏–Ω–æ–º –æ—Ç–¥–µ–ª–∞ "${targetUser.department}".`, adminMainMenu);

            
        case 'awaitingRemoveSubadminUsername':
          if (!isValidUsername(text)) {
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username (–Ω–∞–ø—Ä–∏–º–µ—Ä, @ivan_petrov).');
          }
        
          const delSubUsername = text.trim().replace('@', '');
          const subUser = await User.findOne({ username: delSubUsername });
        
          if (!subUser) {
            return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${delSubUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
          }
        
          if (subUser.role !== 'subadmin') {
            return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${delSubUsername} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—É–±–∞–¥–º–∏–Ω–æ–º.`);
          }
        
          subUser.role = 'user';
          await subUser.save();
        
          delete adminState[username];
        
          return bot.sendMessage(chatId, `üßπ –ü—Ä–∞–≤–∞ —Å—É–±–∞–¥–º–∏–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${delSubUsername} —Å–Ω—è—Ç—ã.`, adminMainMenu);
            
        

        case 'awaitingDepartmentForNewUserByUsername':
          const dept = departmentList.find(d => `${d.emoji} ${d.name}` === text);
          if (!dept) return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');

          const userToUpdate = await User.findOne({ username: adminState[username].username });
          if (!userToUpdate) return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${adminState[username].username} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);

          userToUpdate.department = dept.name;
          await userToUpdate.save();

          delete adminState[username];
          bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${userToUpdate.username} –Ω–∞–∑–Ω–∞—á–µ–Ω –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ "${dept.name}".`);
          return bot.sendMessage(chatId, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', adminMainMenu);

          case 'awaitingDeleteUsername':
          const delUsername = text.trim().replace('@', '');

          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ username
          if (!isValidUsername(text)) {
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username (–Ω–∞–ø—Ä–∏–º–µ—Ä, @ivan_petrov).');
          }

          if (!delUsername) return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username (–Ω–∞–ø—Ä–∏–º–µ—Ä, @ivan_petrov).');

          try {
            const userToDelete = await User.findOne({ username: delUsername });
            if (!userToDelete) return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${delUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);

            await User.deleteOne({ username: delUsername });
            delete adminState[username];
            bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${delUsername} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.`);
            return bot.sendMessage(chatId, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', adminMainMenu);
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
          }


        case 'awaitingDepartment':
          const selected = departmentList.find(d => `${d.emoji} ${d.name}` === text);
          if (!selected) return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');

          adminState[username] = { step: 'awaitingTargetAudience', department: selected.name };
          return bot.sendMessage(chatId, '–ö–æ–º—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É?', {
            reply_markup: {
              keyboard: [['üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞'], ['üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
              resize_keyboard: true
            }
          });

        case 'awaitingTargetAudience':
          if (text === 'üì¢ –í—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–¥–µ–ª–∞') {
            adminState[username].target = 'all';
            adminState[username].step = 'awaitingTaskTitle';
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');
          }

          if (text === 'üë§ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é') {
            const users = await User.find({ department: adminState[username].department });
            if (!users.length) return bot.sendMessage(chatId, '–í –≤—ã–±—Ä–∞–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');

            adminState[username].target = 'user';
            adminState[username].step = 'awaitingTargetUsername';

            const buttons = users.map(u => [`@${u.username}`]);
            buttons.push(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']);

            return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
              reply_markup: { keyboard: buttons, resize_keyboard: true }
            });
          }

          return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.');

          case 'awaitingTargetUsername':
            const targetUsername = text.trim().replace('@', '');
            const exists = await User.findOne({ username: targetUsername });
            if (!exists) return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
          
            adminState[username].targetUsername = targetUsername;
            adminState[username].step = 'awaitingTaskTitle';
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');
          

          case 'awaitingTaskTitle':
            adminState[username].title = text;
            adminState[username].step = 'awaitingTaskDescription';
            return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.');

          case 'awaitingTaskDescription':
            await awaitingTaskDescription(bot, chatId, adminState, username, text);
            break;

          case 'awaitingTaskPhoto':
            await awaitingTaskPhoto(bot, chatId, adminState, username, text);
            break;

          case 'awaitingDeadlineDate':
            await awaitingDeadlineDate(bot, chatId, adminState, username, text);
            break;

          case 'awaitingManualDateInput':
            await awaitingManualDateInput(bot, chatId, adminState, username, text);
            break;

          case 'awaitingDeadlineTime':
            await awaitingDeadlineTime(msg, bot, chatId, adminState, username, text);
            break;

          case 'awaitingManualTimeInput':
            await awaitingManualTimeInput(msg, bot, chatId, adminState, username, text);
            break; 
      }
    }
  }
}
  
bot.on('photo', async (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;
  const fileId = msg.photo[msg.photo.length - 1].file_id;

  const state = adminState[username];
  if (!state || state.step !== 'awaitingPhotoUpload') return;

  try {
    adminState[username].photo = fileId;
    adminState[username].step = 'awaitingDeadlineDate';

    const now = new Date();
    const dateOptions = [];

    for (let i = 0; i < 5; i++) {
      const date = new Date(now);
      date.setDate(now.getDate() + i);
      const dateStr = date.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit', year: 'numeric' });
      dateOptions.push([dateStr]);
    }

    dateOptions.push(['‚å®Ô∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é']);
    dateOptions.push(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']);

    return bot.sendMessage(chatId, 'üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:', {
      reply_markup: {
        keyboard: dateOptions,
        resize_keyboard: true
      }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –∑–∞–¥–∞—á–∏:', error);
    return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
  }
});

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;
  const userId = msg.from.id;
  const text = msg.text?.trim();
  const state = adminState[username];

  console.log("–ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", text);

  // --- –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å "üìÇ –î–æ–∫—É–º–µ–Ω—Ç—ã"
  if (text === 'üìÇ –î–æ–∫—É–º–µ–Ω—Ç—ã') {
    if (!adminIds.includes(userId)) {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} (${userId}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º –±–µ–∑ –ø—Ä–∞–≤.`);
      return bot.sendMessage(chatId, '‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.');
    }

    if (adminState[username]?.step === 'awaitingDepartmentForDocuments') {
      return bot.sendMessage(chatId, '–í—ã —É–∂–µ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞.');
    }

    adminState[username] = { step: 'awaitingDepartmentForDocuments' };
    return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', {
      reply_markup: {
        keyboard: [
          ...departmentList.map(d => [`${d.emoji} ${d.name}`]),
          ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']  
        ],
        resize_keyboard: true
      }
    });
  }

  // --- –í—ã–±–æ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  if (state?.step === 'awaitingDepartmentForDocuments') {
    if (!adminIds.includes(userId)) {
      return bot.sendMessage(chatId, '‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');
    }

    if (text === 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
      delete adminState[username];
      return bot.sendMessage(chatId, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.');
    }

    const selectedDepartment = departmentList.find(d => `${d.emoji} ${d.name}` === text);
    if (selectedDepartment) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
      adminState[username] = { 
        ...state, 
        step: 'awaitingDocumentUpload',  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
        department: selectedDepartment.name
      };
      console.log(`–í—ã–±—Ä–∞–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: ${selectedDepartment.name}`);
      return bot.sendMessage(chatId, `–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: ${selectedDepartment.name}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ PDF-–¥–æ–∫—É–º–µ–Ω—Ç.`);
    } else {
      return bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞.');
    }
  }

  // --- –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  if (state?.step === 'awaitingDocumentUpload') {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ–∫—Å—Ç: –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ
    if (text) {
      return bot.sendMessage(chatId, '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ PDF-–¥–æ–∫—É–º–µ–Ω—Ç, –∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–µ–∫—Å—Ç.');
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç
    if (msg.document) {
      const fileId = msg.document.file_id;
      const fileName = msg.document.file_name;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ PDF
      if (!fileName.endsWith('.pdf')) {
        return bot.sendMessage(chatId, '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.');
      }

      const fileUrl = await bot.getFileLink(fileId);

      const department = adminState[username].department;

      try {
        const newDocument = new Document({
          department,
          fileName,
          fileUrl,
          uploadedBy: username,
        });

        await newDocument.save();
        console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');

        const usersInDepartment = await User.find({ department });
        if (usersInDepartment.length === 0) {
          return bot.sendMessage(chatId, `‚ö†Ô∏è –í –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ ${department} –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.`);
        }
          // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
          for (const user of usersInDepartment) {
            if (!user.chatId) {
              console.error(`‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.username} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç chatId.`);
              continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —É –Ω–µ–≥–æ –Ω–µ—Ç chatId
            }

            try {
              await bot.sendDocument(user.chatId, fileUrl, { caption: 'üìé –ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –æ—Ç–¥–µ–ª–∞.' });
            } catch (error) {
              console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.chatId}:`, error.message);
            }
          }

        // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        delete adminState[username]; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–∏—â–∞–µ—Ç—Å—è, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–±–æ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è

      } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
      }
    } else {
      return bot.sendMessage(chatId, '‚ùå –û–∂–∏–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ PDF-–¥–æ–∫—É–º–µ–Ω—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ PDF.');
    }
  }

    // --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞
if (text === 'üìÑ –ú–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã') {
  try {
    const user = await User.findOne({ username });

    if (!user || !user.department) {
      return bot.sendMessage(chatId, '‚ùó –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–ª–∏ —É –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');
    }

    const docs = await Document.find({ department: user.department }).sort({ createdAt: -1 }).limit(10);

    if (docs.length === 0) {
      return bot.sendMessage(chatId, `üìÅ –í –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ "${user.department}" –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.`);
    }

    // –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
    const inlineKeyboard = docs.map(doc => {
      return [
        {
          text: doc.fileName,
          url: doc.fileUrl, // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç
        }
      ];
    });

    return bot.sendMessage(chatId, '–í–æ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ –æ—Ç–¥–µ–ª–∞:', {
      reply_markup: {
        inline_keyboard: inlineKeyboard,
      }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}
  // --- –§–æ—Ç–æ –æ–∂–∏–¥–∞–ª–æ—Å—å, –Ω–æ –ø—Ä–∏—à–ª–æ –Ω–µ —Ç–æ
  if (state?.step === 'awaitingPhotoUpload' && !msg.photo) {
    return bot.sendMessage(chatId, '‚ùå –û–∂–∏–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.');
  }
});

bot.on('document', async (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;
  const userId = msg.from.id;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  if (!adminIds.includes(userId)) {
    console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} (${userId}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –±–µ–∑ –ø—Ä–∞–≤.`);
    return bot.sendMessage(chatId, '‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã.');
  }

  console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç –æ—Ç ${username}`);

  if (adminState[username]?.department) {
    const fileId = msg.document.file_id;
    const fileName = msg.document.file_name;
    const fileUrl = await bot.getFileLink(fileId);

    if (fileName.endsWith('.pdf')) {
      const department = adminState[username].department;

      try {
        const newDocument = new Document({
          department,
          fileName,
          fileUrl,
          uploadedBy: username,
          fileId: msg.document.file_id,  
        });

        await newDocument.save();
        console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');

        const usersInDepartment = await User.find({ department });
        if (usersInDepartment.length === 0) {
          return bot.sendMessage(chatId, `‚ö†Ô∏è –í –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ ${department} –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.`);
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        for (const user of usersInDepartment) {
          if (!user.chatId) {
            console.error(`‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.username} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç chatId. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.`);
            continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ chatId
          }

          try {
            await bot.sendDocument(user.chatId, fileUrl, { caption: 'üìé –ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –æ—Ç–¥–µ–ª–∞.' });
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.username} (chatId: ${user.chatId}):`, error.message);
          }
        }

        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        delete adminState[username]; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–∏—â–∞–µ—Ç—Å—è, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–±–æ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        return bot.sendMessage(chatId, `‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ—Ç–¥–µ–ª–∞ ${department}.`, adminMainMenu); // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
      }
    } else {
      return bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.');
    }
  } else {
    return bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.');
  }
});

module.exports = { handleAdminCommands };
